<!DOCTYPE html>
<html lang="zh-TW">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <meta name="description" content="國立暨南國際大學遺失物系統">
    <title>回報表單</title>
    <% include ../partials/bootstrap_css %>
</head>

<body>
    <% include ../partials/navBar %>
    <!-- 下面的inclue若出錯可放回container下方，
        放上來，是因為，loading順序 -->
    <% include ../partials/bootstrap_js %>
    <% include ../partials/vue_js %>
    <% include ../partials/jqueryUi %>
    <% include ../partials/categories %>
    <div class="container" style="margin-top: 90px">
        <h1>我東西不見</h1>
        <div id="report">
            <!-- 回報表單 -->
            <div>
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLongTitle">願望清單</h5>
                            <!-- <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button> -->
                        </div>
                        <div class="modal-body">
                            <form class="mb-3">
                                <div class="form-group">
                                    <label for="fication">物品分類</label>
                                    <select :class="{'is-invalid': formData.fication.noValid}" class="form-control" id="fication" v-model.number="formData.fication.value">
                                        <option disabled value="">請選擇</option>
                                        <option value="1">衣物</option>
                                        <option value="2">現金</option>
                                        <option value="3">書籍</option>
                                        <option value="4">3C</option>
                                        <option value="5">文具</option>
                                        <option value="6">卡片</option>
                                        <option value="7">雨具</option>
                                        <option value="8">生活</option>
                                        <option value="9">其他</option>
                                    </select>
                                    <div class="invalid-feedback">
                                        Please provide a valid fication.
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="name">物品名稱</label>
                                    <input type="text" :class="{'is-invalid': formData.name.noValid}" class="form-control" id="name" v-model.trim="formData.name.value"
                                        placeholder="物品名稱...">
                                    <div class="invalid-feedback">
                                        Please provide a valid name.
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="image">請上傳照片</label>
                                    <input type="file" :class="{'is-invalid': formData.image.noValid}" class="form-control" id="image" @change="imageDataSave"
                                        accept="image/*">
                                    <div class="invalid-feedback">
                                        Please provide a valid photo.
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="location">拾獲/遺失地點</label>
                                    <input type="text" :class="{'is-invalid': formData.location.noValid}" class="form-control" id="location" v-model.trim="formData.location.value"
                                        placeholder="拾獲地點...">
                                    <div class="invalid-feedback">
                                        Please provide a valid location.
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="day">拾獲/遺失日期</label>
                                    <input type="text" :class="{'is-invalid': formData.date.noValid}" class="form-control" id="day" placeholder="ex:2017-12-25">
                                    <div class="invalid-feedback">
                                        Please provide a valid date.
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="time">拾獲/遺失時段(小時)</label>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <input type="number" :class="{'is-invalid': formData.timeLB.noValid}" class="form-control" id="time" v-model.number="formData.timeLB.value"
                                                placeholder="ex:下午2點 => 14">
                                            <div class="invalid-feedback">
                                                Please provide a valid time.
                                            </div>
                                        </div>
                                        <div class="col-md-6 mt-3 mt-md-0">
                                            <input type="number" :class="{'is-invalid': formData.timeUB.noValid}" class="form-control" v-model.number="formData.timeUB.value"
                                                placeholder="ex:下午4點 => 16">
                                            <div class="invalid-feedback">
                                                Please provide a valid time.
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="description">簡單描述物品(外觀、顏色、特徵)</label>
                                    <input type="text" :class="{'is-invalid': formData.description.noValid}" class="form-control" id="description" v-model.trim="formData.description.value"
                                        placeholder="物品描述...">
                                    <div class="invalid-feedback">
                                        Please provide a valid description.
                                    </div>
                                </div>
                                <div v-if="feedBack.submited" class="alert alert-warning" role="alert">
                                    <strong>感謝您的回報，世界會更好!</strong>
                                </div>
                                <div v-if="feedBack.isError" class="alert alert-warning" role="alert">
                                    <strong>非常抱歉，伺服器發生錯誤，請稍後再試一次!</strong>
                                </div>
                                <button :disabled="formData.image.uploading" @click.prevent="createFound" type="submit" class="btn" :class="{'btn-primary': !formData.image.uploading, 'btn-warning': formData.image.uploading}">{{ formData.image.uploading? '圖片上傳中...': '送出' }}</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        </div>

    <script>
        var app = new Vue({
            el: '#report',
            data: {
                lists: '',
                formData: {
                    id: {
                        // 只有在更新時才會更新
                        noValid: false,
                        value: 1
                    },
                    name: {
                        noValid: false,
                        value: ''
                    },
                    location: {
                        noValid: false,
                        value: ''
                    },
                    description: {
                        noValid: false,
                        value: ''
                    },
                    fication: {
                        noValid: false,
                        value: ''
                    },
                    date: {
                        noValid: false,
                        value: ''
                    },
                    timeLB: {
                        noValid: false,
                        value: ''
                    },
                    timeUB: {
                        noValid: false,
                        value: ''
                    },
                    image: {
                        noValid: false,
                        value: '',
                        uploading: false,
                        // 包好的 form data
                        imgData: {},
                        deleteHash: ''
                    }
                },
                // 回報表單回饋訊息
                feedBack: {
                    submited: 0,
                    isError: 0
                }
            },
            methods: {
                formIsEmpty(obj) {
                    // 檢查傳入的物件是否有value沒填
                    // 若為空則將將noValid改為是 反之則否
                    var check = 1;
                    for (let key in obj) {
                        if(key == "image"){
                            // 不檢查是否上傳圖片
                            obj[key].noValid = false;
                        }else if (key == "date") {
                            // YYYY-MM-DD
                            var reg = /(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))/;
                            if (obj[key].value.match(reg) == null) {
                                check = 0;
                                obj[key].noValid = true;
                            } else {
                                obj[key].noValid = false;
                            }
                        } else if (key != "timeLB" && key != "timeUB") {
                            if (obj[key].value == '') {
                                check = 0;
                                obj[key].noValid = true;
                            } else {
                                obj[key].noValid = false;
                            }
                        } else {
                            if (obj[key].value == '' || obj[key].value < 0 || obj[key].value > 24) {
                                check = 0;
                                obj[key].noValid = true;
                            } else {
                                obj[key].noValid = false;
                            }
                        }
                    }
                    return check;
                },
                createFound () {
                    this.feedBack.submited = 0;
                    this.feedBack.isError = 0;
                    if(this.formIsEmpty(this.formData)){
                        console.log("有東西");
                        var self = this;
                        let tmp1 = self.formData.date.value + " " + self.formData.timeLB.value;
                        let tmp2 = self.formData.date.value + " " + self.formData.timeUB.value;
                        let time_LB = moment(tmp1 + "+0000", "YYYY-MM-DD HH Z").toISOString(true);
                        let time_UB = moment(tmp2 + "+0000", "YYYY-MM-DD HH Z").toISOString(true);
                        var self = this;
                        if(self.formData.image.value == "ok"){
                            self.imageUpload(self.formData.image.imgData).then((res) => {
                                axios.post('/api/lost', {
                                    "name": self.formData.name.value,
                                    "classification_id": self.formData.fication.value,
                                    "location": self.formData.location.value,
                                    "time_interval_LB": time_LB,
                                    "time_interval_UB": time_UB,
                                    "description": self.formData.description.value,
                                    "image": self.formData.image.value,
                                    "deleteHash": self.formData.image.deleteHash
                                })
                                .then(function (response) {
                                    console.log(response);
                                    self.feedBack.submited = 1;
                                    setTimeout(function () {
                                        // location.reload();
                                        location.replace("/found");
                                    }, 2000);
                                })
                                .catch(function (error) {
                                    console.log(error);
                                    self.feedBack.isError = 1;
                                    setTimeout(function () {
                                        location.reload();
                                    }, 2000);
                                });
                            });
                        }else {
                            axios.post('/api/lost', {
                                "name": self.formData.name.value,
                                "classification_id": self.formData.fication.value,
                                "location": self.formData.location.value,
                                "time_interval_LB": time_LB,
                                "time_interval_UB": time_UB,
                                "description": self.formData.description.value
                            })
                            .then(function (response) {
                                console.log(response);
                                self.feedBack.submited = 1;
                                setTimeout(function () {
                                    // location.reload();
                                    location.replace("/found");
                                }, 2000);
                            })
                            .catch(function (error) {
                                console.log(error);
                                self.feedBack.isError = 1;
                                setTimeout(function () {
                                    location.reload();
                                }, 2000);
                            });
                        }
                    }else {
                        console.log("有東西沒填");
                    }
                },
                imageDataSave(e) {
                    // 將上傳前的圖片資訊存起來,等待表單提交時上傳
                    let imageFile = e.target.files[0];
                    if (imageFile.type.indexOf('image/') == -1) {
                        alert('It must be a image');
                        return;
                    } else {
                        // 把圖片編碼存起來
                        this.formData.image.imgData = imageFile;
                        // 確定是圖片後先把 value 改掉, 讓送出驗證時不為空
                        this.formData.image.value = "ok";
                    }
                },
                imageUpload(imageFile) {
                    let formData = new FormData();
                    formData.append('image', imageFile);
                    // 正要上傳,狀態改為是
                    this.formData.image.uploading = true;
                    return fetch('https://api.imgur.com/3/image', {
                        method: 'post',
                        body: formData,
                        headers: new Headers({
                            'Authorization': 'Client-ID 3b927010e0363a1'
                        })
                    }).then((resp) => {
                        return resp.json();
                    }).then((response) => {
                        if (response.success) {
                            let imageURL = response.data.link;
                            let imageDEL = response.data.deletehash;
                            // console.log(imageURL, imageDEL);
                            this.formData.image.value = imageURL;
                            this.formData.image.deleteHash = imageDEL;
                            // 上傳完成,狀態改為否
                            this.formData.image.uploading = false;
                        } else {
                            console.log(response);
                            this.feedBack.isError = 1;
                            this.formData.image.uploading = false;
                        }
                    });
                },
            }
        })
    </script>
</body>

</html>